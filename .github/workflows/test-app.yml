name: test-app

on:
  workflow_call:

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download prepared application
        uses: actions/download-artifact@v4
        with:
          name: api-travel-orders
          path: api-travel-orders

      - name: Execute tests Unit via PHPUnit
        working-directory: api-travel-orders
        run: php artisan test --filter Unit --env=testing

  feature-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download prepared application
        uses: actions/download-artifact@v4
        with:
          name: api-travel-orders
          path: api-travel-orders

      - name: Ensure database exists
        working-directory: api-travel-orders
        run: |
          mkdir -p database
          touch database/database.sqlite
          chmod 777 database/database.sqlite
          ls database

      - name: Run Migrations
        working-directory: api-travel-orders
        run: php artisan migrate --env=testing

      - name: JWT APP
        working-directory: api-travel-orders
        run: php artisan jwt:secret --env=testing

      - name: Install and Configure Xdebug
        run: |
          sudo apt-get update
          sudo apt-get install -y php-xdebug
            
          XDEBUG_INI=/etc/php/$(php -r 'echo PHP_MAJOR_VERSION.".".PHP_MINOR_VERSION;')/cli/conf.d/20-xdebug.ini

          echo "zend_extension=xdebug" | sudo tee -a $XDEBUG_INI
          echo "xdebug.mode=coverage" | sudo tee -a $XDEBUG_INI
          echo "xdebug.start_with_request=yes" | sudo tee -a $XDEBUG_INI
          echo "xdebug.client_host=127.0.0.1" | sudo tee -a $XDEBUG_INI

          php -m | grep xdebug

      - name: Execute tests Feature via PHPUnit
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        working-directory: api-travel-orders
        run: php artisan test --env=testing --filter Feature

  coverage-and-infection-tests:
    runs-on: ubuntu-latest
    needs: [unit-tests, feature-tests]
    steps:
      - uses: actions/checkout@v4

      - name: Download prepared application
        uses: actions/download-artifact@v4
        with:
          name: api-travel-orders
          path: api-travel-orders

      - name: Ensure database exists
        working-directory: api-travel-orders
        run: |
          mkdir -p database
          touch database/database.sqlite
          chmod 777 database/database.sqlite
          ls database

      - name: Run Migrations
        working-directory: api-travel-orders
        run: php artisan migrate --env=testing

      - name: JWT APP
        working-directory: api-travel-orders
        run: php artisan jwt:secret --env=testing

      - name: Install and Configure Xdebug
        run: |
          sudo apt-get update
          sudo apt-get install -y php-xdebug
            
          XDEBUG_INI=/etc/php/$(php -r 'echo PHP_MAJOR_VERSION.".".PHP_MINOR_VERSION;')/cli/conf.d/20-xdebug.ini

          echo "zend_extension=xdebug" | sudo tee -a $XDEBUG_INI
          echo "xdebug.mode=coverage" | sudo tee -a $XDEBUG_INI
          echo "xdebug.start_with_request=yes" | sudo tee -a $XDEBUG_INI
          echo "xdebug.client_host=127.0.0.1" | sudo tee -a $XDEBUG_INI

          php -m | grep xdebug
      - name: Execute tests Coverage
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        working-directory: api-travel-orders
        run: php artisan test:coverage --env=testing

      - name: Execute tests Coverage
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        working-directory: api-travel-orders
        run: php artisan test:coverage --env=testing

      - name: Set permissions for Infection
        working-directory: api-travel-orders
        run: chmod +x vendor/bin/infection
        
      - name: Execute tests Infection
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        working-directory: api-travel-orders
        run: php artisan test:mutation --env=testing

      - name: Save Prepared Environment
        uses: actions/upload-artifact@v4
        with:
          name: coverage-and-infection-tests
          path: api-travel-orders/tests/result

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: coverage-and-infection-tests
  #   permissions:
  #     contents: read
  #     pages: write
  #     id-token: write
  #   concurrency:
  #     group: "pages"
  #     cancel-in-progress: false
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Download test results
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: coverage-and-infection-tests
  #         path: docs

  #     - name: Setup Pages
  #       uses: actions/configure-pages@v5

  #     - name: Upload artifact to GitHub Pages
  #       uses: actions/upload-pages-artifact@v3
  #       with:
  #         path: docs

  #     - name: Deploy to GitHub Pages
  #       id: deployment
  #       uses: actions/deploy-pages@v4

  #     - name: Output Deployment URL
  #       run: echo "Deployed to ${{ steps.deployment.outputs.page_url }}"
        

