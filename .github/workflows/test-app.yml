name: test-app

on:
  workflow_call:

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download prepared application
        uses: actions/download-artifact@v4
        with:
          name: api-travel-orders
          path: api-travel-orders

      - name: Execute tests Unit via PHPUnit
        working-directory: api-travel-orders
        run: php artisan test --filter Unit --env=testing

  feature-tests:
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
      - uses: actions/checkout@v4

      - name: Download prepared application
        uses: actions/download-artifact@v4
        with:
          name: api-travel-orders
          path: api-travel-orders

      - name: Ensure database exists
        working-directory: api-travel-orders
        run: |
          mkdir -p database
          touch database/database.sqlite
          chmod 777 database/database.sqlite
          ls database

      - name: Run Migrations
        working-directory: api-travel-orders
        run: php artisan migrate --env=testing

      - name: JWT APP
        run: php artisan jwt:secret --env=testing
        working-directory: api-travel-orders

      - name: Execute tests Feature via PHPUnit
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        working-directory: api-travel-orders
        run: php artisan test --env=testing --filter Feature

  coverage:
    runs-on: ubuntu-latest
    needs: [unit-tests, feature-tests]
    steps:
      - uses: actions/checkout@v4

      - name: Download prepared application
        uses: actions/download-artifact@v4
        with:
          name: api-travel-orders
          path: api-travel-orders

      - name: Run PHPUnit with Coverage
        working-directory: api-travel-orders
        run: php artisan test:coverage --env=testing

      - name: Upload Coverage Results
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: api-travel-orders/tests/result/coverage

  infection:
    runs-on: ubuntu-latest
    needs: [unit-tests, feature-tests]
    steps:
      - uses: actions/checkout@v4

      - name: Download prepared application
        uses: actions/download-artifact@v4
        with:
          name: api-travel-orders
          path: api-travel-orders

      - name: Run Infection
        working-directory: api-travel-orders
        run: php artisan test:mutation --env=testing

      - name: Upload Infection Report
        uses: actions/upload-artifact@v4
        with:
          name: mutation-report
          path: api-travel-orders/tests/result/mutation
