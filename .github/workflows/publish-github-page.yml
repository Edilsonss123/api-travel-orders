name: publish-github-page

on:
  workflow_call:

jobs:
  publish-github-page:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    concurrency:
      group: "pages"
      cancel-in-progress: false
    steps:
      - uses: actions/checkout@v4

      # Passo 1: Baixar os resultados de teste
      - name: Download test results
        uses: actions/download-artifact@v4
        with:
          name: coverage-and-infection-tests
          path: docs

      # Passo 2: Configurar o GitHub Pages
      - name: Setup Pages
        uses: actions/configure-pages@v5

      # Passo 3: Baixar o CSS e adicionar ao repositório
      - name: Download CSS file
        run: |
          curl -o docs/github-markdown-light.min.css https://cdnjs.cloudflare.com/ajax/libs/github-markdown-css/5.2.0/github-markdown-light.min.css

      # Passo 4: Converter Markdown para GitHub Pages
      - name: Convert Markdown to GitHub Pages
        uses: wranders/markdown-to-pages-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            README.md
          out_path: docs
          custom_css: docs/github-markdown-light.min.css  # Agora referencia o CSS baixado

      # Passo 5: Listar o diretório docs após a conversão
      - name: List docs directory (after conversion)
        run: ls -R docs

      # Passo 6: Upload do conteúdo para o GitHub Pages
      - name: Upload artifact to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs

      # Passo 7: Deploy para GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      # Passo 8: Exibir a URL do deployment
      - name: Output Deployment URL
        run: echo "Deployed to ${{ steps.deployment.outputs.page_url }}"
