Desafio

Você precisa desenvolver um microsserviço em Laravel para gerenciar pedidos de viagem corporativa. O microsserviço deve expor uma API REST para as seguintes operações:

    Criar um pedido de viagem: Um pedido deve incluir o ID do pedido, o nome do solicitante, o destino, a data de ida, a data de volta e o status (solicitado, aprovado, cancelado).

    Atualizar o status de um pedido de viagem: Possibilitar a atualização do status para "aprovado" ou "cancelado".

    Consultar um pedido de viagem: Retornar as informações detalhadas de um pedido de viagem com base no ID fornecido.

    Listar todos os pedidos de viagem: Retornar todos os pedidos de viagem cadastrados, com a opção de filtrar por status.

Requisitos Técnicos

    Utilize o framework Laravel (versão mais recente possível).
    A API deve seguir as boas práticas de arquitetura de microsserviços.
    Utilize um banco de dados relacional (MySQL) e forneça uma migração para a estrutura das tabelas necessárias.
    Implemente validação de dados no backend e tratamento de erros apropriado.
    Escreva testes automatizados (preferencialmente com PHPUnit) para as principais funcionalidades.
    Utilize Docker para facilitar a execução do serviço. A aplicação deve poder ser executada via Docker.
    Implemente autenticação simples usando tokens (como JWT) para proteger a API.

Como entregar

    Suba o projeto em um repositório privado no GitHub e compartilhe o acesso com nosso time (envie para este e-mail mesmo).
    No repositório, inclua um README.md com as instruções para:
        Instalar as dependências.
        Executar o serviço localmente (usando Docker).
        Configurar o ambiente (variáveis de ambiente, banco de dados, etc.).
        Executar os testes.
        Qualquer informação adicional que você considere relevante.

Critérios de Avaliação

    Organização e Qualidade do Código: Como você estrutura e organiza seu código, aplicando boas práticas de desenvolvimento.
    Uso de Boas Práticas do Laravel: Queremos ver como você utiliza os recursos do framework, como Eloquent, middlewares, e validação de requests.
    Eficiência da Solução: Avaliação da performance geral e da eficiência da sua solução.
    Testes e Confiabilidade: Como você garante a confiabilidade da aplicação com testes automatizados.
    Documentação: A clareza das instruções fornecidas no README.md para configurar e executar o projeto.

Estamos ansiosos para conhecer sua solução! Caso tenha qualquer dúvida ou precise de algum suporte durante a execução do desafio, sinta-se à vontade para entrar em contato.