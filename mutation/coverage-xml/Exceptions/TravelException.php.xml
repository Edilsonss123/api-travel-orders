<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="TravelException.php" path="/Exceptions">
    <totals>
      <lines total="23" comments="0" code="23" executable="3" executed="3" percent="100.00"/>
      <methods count="2" tested="2" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="App\Exceptions\TravelException" start="8" executable="3" executed="3" crap="2">
      <namespace name="App\Exceptions"/>
      <method name="__construct" signature="__construct(string $message, int $code, Throwable $previous, $data)" start="12" end="16" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="getData" signature="getData(): array" start="18" end="21" crap="1" executable="1" executed="1" coverage="100"/>
    </class>
    <coverage>
      <line nr="14">
        <covered by="Tests\Unit\Services\Auth\AuthServiceTest::test_login_failed"/>
        <covered by="Tests\Unit\Services\Travel\TravelOrderServiceCreateTest::testCreateOrderStatusCanceledReturnException"/>
        <covered by="Tests\Unit\Services\Travel\TravelOrderServiceRetrieveTest::testFindByIdThrowsTravelExceptionWhenOrderNotFound"/>
        <covered by="Tests\Unit\Services\Travel\TravelOrderServiceUpdateTest::testUpdateStatusThrowsExceptionWhenStatusIsSame"/>
        <covered by="Tests\Unit\Services\Travel\TravelOrderServiceUpdateTest::testUpdateStatusThrowsExceptionWhenStatusIsUnchanged with data set &quot;already_same&quot;"/>
        <covered by="Tests\Unit\Services\Travel\TravelOrderServiceUpdateTest::testUpdateStatusThrowsExceptionWhenStatusIsUnchanged with data set &quot;change_to_requested&quot;"/>
        <covered by="Tests\Unit\Services\Travel\TravelOrderServiceUpdateTest::testUpdateStatusThrowsExceptionWhenStatusIsUnchanged with data set &quot;change_from_canceled_to_approved&quot;"/>
        <covered by="Tests\Unit\ValueObject\Auth\UserCreateVOTest::test_create_user_validation with data set &quot;invalid_name_empty&quot;"/>
        <covered by="Tests\Unit\ValueObject\Auth\UserCreateVOTest::test_create_user_validation with data set &quot;invalid_name_too_short&quot;"/>
        <covered by="Tests\Unit\ValueObject\Auth\UserCreateVOTest::test_create_user_validation with data set &quot;invalid_name_too_long&quot;"/>
        <covered by="Tests\Unit\ValueObject\Auth\UserCreateVOTest::test_create_user_validation with data set &quot;invalid_email_empty&quot;"/>
        <covered by="Tests\Unit\ValueObject\Auth\UserCreateVOTest::test_create_user_validation with data set &quot;invalid_email_format&quot;"/>
        <covered by="Tests\Unit\ValueObject\Auth\UserCreateVOTest::test_create_user_validation with data set &quot;invalid_email_too_long&quot;"/>
        <covered by="Tests\Unit\ValueObject\Auth\UserCreateVOTest::test_create_user_validation with data set &quot;invalid_password_empty&quot;"/>
        <covered by="Tests\Unit\ValueObject\Auth\UserCreateVOTest::test_create_user_validation with data set &quot;invalid_password_too_short&quot;"/>
        <covered by="Tests\Unit\ValueObject\Auth\UserLoginVOTest::test_create_user_validation with data set &quot;invalid_email_empty&quot;"/>
        <covered by="Tests\Unit\ValueObject\Auth\UserLoginVOTest::test_create_user_validation with data set &quot;invalid_email&quot;"/>
        <covered by="Tests\Unit\ValueObject\Auth\UserLoginVOTest::test_create_user_validation with data set &quot;invalid_email_too_long&quot;"/>
        <covered by="Tests\Unit\ValueObject\Auth\UserLoginVOTest::test_create_user_validation with data set &quot;empty_password&quot;"/>
        <covered by="Tests\Unit\ValueObject\Auth\UserLoginVOTest::test_create_user_validation with data set &quot;invalid_password_too_short&quot;"/>
        <covered by="Tests\Unit\ValueObject\Travel\TravelOrderCreateVOTest::testTravelOrderCreateVO with data set &quot;empty_traveler_name&quot;"/>
        <covered by="Tests\Unit\ValueObject\Travel\TravelOrderCreateVOTest::testTravelOrderCreateVO with data set &quot;invalid_name_too_short&quot;"/>
        <covered by="Tests\Unit\ValueObject\Travel\TravelOrderCreateVOTest::testTravelOrderCreateVO with data set &quot;empty_destination&quot;"/>
        <covered by="Tests\Unit\ValueObject\Travel\TravelOrderCreateVOTest::testTravelOrderCreateVO with data set &quot;invalid_destination_too_short&quot;"/>
        <covered by="Tests\Unit\ValueObject\Travel\TravelOrderCreateVOTest::testTravelOrderCreateVO with data set &quot;departure_date_in_past&quot;"/>
        <covered by="Tests\Unit\ValueObject\Travel\TravelOrderCreateVOTest::testTravelOrderCreateVO with data set &quot;return_date_before_departure&quot;"/>
        <covered by="Tests\Unit\ValueObject\Travel\TravelOrderCreateVOTest::testTravelOrderCreateVO with data set &quot;invalid_status_canceled&quot;"/>
        <covered by="Tests\Unit\ValueObject\Travel\TravelOrderCreateVOTest::testTravelOrderCreateVO with data set &quot;invalid_name_too_long&quot;"/>
        <covered by="Tests\Unit\ValueObject\Travel\TravelOrderCreateVOTest::testTravelOrderCreateVO with data set &quot;invalid_destination_too_long&quot;"/>
        <covered by="Tests\Feature\Auth\UserAuthenticateTest::testUserCannotAuthenticateWithInvalidCredentials"/>
        <covered by="Tests\Feature\Auth\UserAuthenticateTest::testUserCanAuthenticateWithTravelException"/>
        <covered by="Tests\Feature\Auth\UserAuthenticateTest::testLogoutFailsWithTravelException"/>
        <covered by="Tests\Feature\Auth\UserAuthenticateTest::testRefreshFailureWithTravelException"/>
        <covered by="Tests\Feature\Auth\UserCreateTest::testCreateFailsWithTravelException"/>
        <covered by="Tests\Feature\Health\HealthCheckTest::testHealthApiFail"/>
        <covered by="Tests\Feature\Health\HealthCheckTest::testApiLoadGeneratorFail"/>
        <covered by="Tests\Feature\Travel\TravelOrderRetrieveTest::testGetTravelOrderByIdEntityNotFound"/>
        <covered by="Tests\Feature\Travel\TravelOrderStatusTest::testShowTravelStatusOrderWithTravelException"/>
      </line>
      <line nr="15">
        <covered by="Tests\Unit\Services\Auth\AuthServiceTest::test_login_failed"/>
        <covered by="Tests\Unit\Services\Travel\TravelOrderServiceCreateTest::testCreateOrderStatusCanceledReturnException"/>
        <covered by="Tests\Unit\Services\Travel\TravelOrderServiceRetrieveTest::testFindByIdThrowsTravelExceptionWhenOrderNotFound"/>
        <covered by="Tests\Unit\Services\Travel\TravelOrderServiceUpdateTest::testUpdateStatusThrowsExceptionWhenStatusIsSame"/>
        <covered by="Tests\Unit\Services\Travel\TravelOrderServiceUpdateTest::testUpdateStatusThrowsExceptionWhenStatusIsUnchanged with data set &quot;already_same&quot;"/>
        <covered by="Tests\Unit\Services\Travel\TravelOrderServiceUpdateTest::testUpdateStatusThrowsExceptionWhenStatusIsUnchanged with data set &quot;change_to_requested&quot;"/>
        <covered by="Tests\Unit\Services\Travel\TravelOrderServiceUpdateTest::testUpdateStatusThrowsExceptionWhenStatusIsUnchanged with data set &quot;change_from_canceled_to_approved&quot;"/>
        <covered by="Tests\Unit\ValueObject\Auth\UserCreateVOTest::test_create_user_validation with data set &quot;invalid_name_empty&quot;"/>
        <covered by="Tests\Unit\ValueObject\Auth\UserCreateVOTest::test_create_user_validation with data set &quot;invalid_name_too_short&quot;"/>
        <covered by="Tests\Unit\ValueObject\Auth\UserCreateVOTest::test_create_user_validation with data set &quot;invalid_name_too_long&quot;"/>
        <covered by="Tests\Unit\ValueObject\Auth\UserCreateVOTest::test_create_user_validation with data set &quot;invalid_email_empty&quot;"/>
        <covered by="Tests\Unit\ValueObject\Auth\UserCreateVOTest::test_create_user_validation with data set &quot;invalid_email_format&quot;"/>
        <covered by="Tests\Unit\ValueObject\Auth\UserCreateVOTest::test_create_user_validation with data set &quot;invalid_email_too_long&quot;"/>
        <covered by="Tests\Unit\ValueObject\Auth\UserCreateVOTest::test_create_user_validation with data set &quot;invalid_password_empty&quot;"/>
        <covered by="Tests\Unit\ValueObject\Auth\UserCreateVOTest::test_create_user_validation with data set &quot;invalid_password_too_short&quot;"/>
        <covered by="Tests\Unit\ValueObject\Auth\UserLoginVOTest::test_create_user_validation with data set &quot;invalid_email_empty&quot;"/>
        <covered by="Tests\Unit\ValueObject\Auth\UserLoginVOTest::test_create_user_validation with data set &quot;invalid_email&quot;"/>
        <covered by="Tests\Unit\ValueObject\Auth\UserLoginVOTest::test_create_user_validation with data set &quot;invalid_email_too_long&quot;"/>
        <covered by="Tests\Unit\ValueObject\Auth\UserLoginVOTest::test_create_user_validation with data set &quot;empty_password&quot;"/>
        <covered by="Tests\Unit\ValueObject\Auth\UserLoginVOTest::test_create_user_validation with data set &quot;invalid_password_too_short&quot;"/>
        <covered by="Tests\Unit\ValueObject\Travel\TravelOrderCreateVOTest::testTravelOrderCreateVO with data set &quot;empty_traveler_name&quot;"/>
        <covered by="Tests\Unit\ValueObject\Travel\TravelOrderCreateVOTest::testTravelOrderCreateVO with data set &quot;invalid_name_too_short&quot;"/>
        <covered by="Tests\Unit\ValueObject\Travel\TravelOrderCreateVOTest::testTravelOrderCreateVO with data set &quot;empty_destination&quot;"/>
        <covered by="Tests\Unit\ValueObject\Travel\TravelOrderCreateVOTest::testTravelOrderCreateVO with data set &quot;invalid_destination_too_short&quot;"/>
        <covered by="Tests\Unit\ValueObject\Travel\TravelOrderCreateVOTest::testTravelOrderCreateVO with data set &quot;departure_date_in_past&quot;"/>
        <covered by="Tests\Unit\ValueObject\Travel\TravelOrderCreateVOTest::testTravelOrderCreateVO with data set &quot;return_date_before_departure&quot;"/>
        <covered by="Tests\Unit\ValueObject\Travel\TravelOrderCreateVOTest::testTravelOrderCreateVO with data set &quot;invalid_status_canceled&quot;"/>
        <covered by="Tests\Unit\ValueObject\Travel\TravelOrderCreateVOTest::testTravelOrderCreateVO with data set &quot;invalid_name_too_long&quot;"/>
        <covered by="Tests\Unit\ValueObject\Travel\TravelOrderCreateVOTest::testTravelOrderCreateVO with data set &quot;invalid_destination_too_long&quot;"/>
        <covered by="Tests\Feature\Auth\UserAuthenticateTest::testUserCannotAuthenticateWithInvalidCredentials"/>
        <covered by="Tests\Feature\Auth\UserAuthenticateTest::testUserCanAuthenticateWithTravelException"/>
        <covered by="Tests\Feature\Auth\UserAuthenticateTest::testLogoutFailsWithTravelException"/>
        <covered by="Tests\Feature\Auth\UserAuthenticateTest::testRefreshFailureWithTravelException"/>
        <covered by="Tests\Feature\Auth\UserCreateTest::testCreateFailsWithTravelException"/>
        <covered by="Tests\Feature\Health\HealthCheckTest::testHealthApiFail"/>
        <covered by="Tests\Feature\Health\HealthCheckTest::testApiLoadGeneratorFail"/>
        <covered by="Tests\Feature\Travel\TravelOrderRetrieveTest::testGetTravelOrderByIdEntityNotFound"/>
        <covered by="Tests\Feature\Travel\TravelOrderStatusTest::testShowTravelStatusOrderWithTravelException"/>
      </line>
      <line nr="20">
        <covered by="Tests\Unit\ValueObject\Auth\UserCreateVOTest::test_create_user_validation with data set &quot;invalid_name_empty&quot;"/>
        <covered by="Tests\Unit\ValueObject\Auth\UserCreateVOTest::test_create_user_validation with data set &quot;invalid_name_too_short&quot;"/>
        <covered by="Tests\Unit\ValueObject\Auth\UserCreateVOTest::test_create_user_validation with data set &quot;invalid_name_too_long&quot;"/>
        <covered by="Tests\Unit\ValueObject\Auth\UserCreateVOTest::test_create_user_validation with data set &quot;invalid_email_empty&quot;"/>
        <covered by="Tests\Unit\ValueObject\Auth\UserCreateVOTest::test_create_user_validation with data set &quot;invalid_email_format&quot;"/>
        <covered by="Tests\Unit\ValueObject\Auth\UserCreateVOTest::test_create_user_validation with data set &quot;invalid_email_too_long&quot;"/>
        <covered by="Tests\Unit\ValueObject\Auth\UserCreateVOTest::test_create_user_validation with data set &quot;invalid_password_empty&quot;"/>
        <covered by="Tests\Unit\ValueObject\Auth\UserCreateVOTest::test_create_user_validation with data set &quot;invalid_password_too_short&quot;"/>
        <covered by="Tests\Unit\ValueObject\Auth\UserLoginVOTest::test_create_user_validation with data set &quot;invalid_email_empty&quot;"/>
        <covered by="Tests\Unit\ValueObject\Auth\UserLoginVOTest::test_create_user_validation with data set &quot;invalid_email&quot;"/>
        <covered by="Tests\Unit\ValueObject\Auth\UserLoginVOTest::test_create_user_validation with data set &quot;invalid_email_too_long&quot;"/>
        <covered by="Tests\Unit\ValueObject\Auth\UserLoginVOTest::test_create_user_validation with data set &quot;empty_password&quot;"/>
        <covered by="Tests\Unit\ValueObject\Auth\UserLoginVOTest::test_create_user_validation with data set &quot;invalid_password_too_short&quot;"/>
        <covered by="Tests\Unit\ValueObject\Travel\TravelOrderCreateVOTest::testTravelOrderCreateVO with data set &quot;empty_traveler_name&quot;"/>
        <covered by="Tests\Unit\ValueObject\Travel\TravelOrderCreateVOTest::testTravelOrderCreateVO with data set &quot;invalid_name_too_short&quot;"/>
        <covered by="Tests\Unit\ValueObject\Travel\TravelOrderCreateVOTest::testTravelOrderCreateVO with data set &quot;empty_destination&quot;"/>
        <covered by="Tests\Unit\ValueObject\Travel\TravelOrderCreateVOTest::testTravelOrderCreateVO with data set &quot;invalid_destination_too_short&quot;"/>
        <covered by="Tests\Unit\ValueObject\Travel\TravelOrderCreateVOTest::testTravelOrderCreateVO with data set &quot;departure_date_in_past&quot;"/>
        <covered by="Tests\Unit\ValueObject\Travel\TravelOrderCreateVOTest::testTravelOrderCreateVO with data set &quot;return_date_before_departure&quot;"/>
        <covered by="Tests\Unit\ValueObject\Travel\TravelOrderCreateVOTest::testTravelOrderCreateVO with data set &quot;invalid_status_canceled&quot;"/>
        <covered by="Tests\Unit\ValueObject\Travel\TravelOrderCreateVOTest::testTravelOrderCreateVO with data set &quot;invalid_name_too_long&quot;"/>
        <covered by="Tests\Unit\ValueObject\Travel\TravelOrderCreateVOTest::testTravelOrderCreateVO with data set &quot;invalid_destination_too_long&quot;"/>
        <covered by="Tests\Feature\Travel\TravelOrderCreateTest::testCreateTravelOrderWithException with data set &quot;test TravelException&quot;"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Exceptions</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Exception</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Throwable</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="7"/>
      <line no="8">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">TravelException</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXTENDS">extends</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Exception</token>
      </line>
      <line no="9">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="10">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$data</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="11"/>
      <line no="12">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$message</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$code</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">500</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Throwable</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$previous</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$data</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="13">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="14">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">data</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$data</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="15">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">parent</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$message</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$code</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$previous</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="16">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="17"/>
      <line no="18">
        <token name="T_WHITESPACE">    </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getData</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="19">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="20">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">data</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="21">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="22">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="23"/>
    </source>
  </file>
</phpunit>
